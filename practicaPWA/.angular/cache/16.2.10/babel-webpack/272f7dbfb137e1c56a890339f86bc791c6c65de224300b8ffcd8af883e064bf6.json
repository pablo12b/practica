{"ast":null,"code":"import { Nota } from '../domain/nota';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/notas-firebase.service\";\nimport * as i3 from \"@angular/forms\";\nexport class EditarComponent {\n  constructor(router, route, notasFirebaseService) {\n    this.router = router;\n    this.route = route;\n    this.notasFirebaseService = notasFirebaseService;\n    this.nota = new Nota();\n    this.route.params.subscribe(params => {\n      console.log(params);\n      if (params['etiqueta']) {\n        this.loadPersona(params['etiqueta']);\n      }\n    });\n  }\n  loadPersona(uid) {\n    this.notasFirebaseService.getNota(uid).subscribe(data => {\n      console.log(data);\n      this.nota = data;\n    });\n  }\n  static #_ = this.ɵfac = function EditarComponent_Factory(t) {\n    return new (t || EditarComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.NotasFirebaseService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarComponent,\n    selectors: [[\"app-editar\"]],\n    decls: 18,\n    vars: 3,\n    consts: [[1, \"form-group\"], [\"for\", \"nota\"], [\"type\", \"text\", \"id\", \"nota\", \"formControlName\", \"nota\", \"required\", \"\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"id\", \"fecha\", \"formControlName\", \"fecha\", \"required\", \"\"], [\"for\", \"etiqueta\"], [\"id\", \"etiqueta\", \"formControlName\", \"etiqueta\", \"required\", \"\"]],\n    template: function EditarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2, \"Nota:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"label\");\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 0)(7, \"label\", 3);\n        i0.ɵɵtext(8, \"Fecha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"label\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 0)(13, \"label\", 5);\n        i0.ɵɵtext(14, \"Etiqueta:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"label\");\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"textarea\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.nota.nota);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.nota.fecha);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.nota.etiqueta);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.RequiredValidator, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Nota","EditarComponent","constructor","router","route","notasFirebaseService","nota","params","subscribe","console","log","loadPersona","uid","getNota","data","_","i0","ɵɵdirectiveInject","i1","Router","ActivatedRoute","i2","NotasFirebaseService","_2","selectors","decls","vars","consts","template","EditarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","fecha","etiqueta"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\editar\\editar.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\editar\\editar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Nota } from '../domain/nota';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotasFirebaseService } from '../services/notas-firebase.service';\n\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar.component.html',\n  styleUrls: ['./editar.component.css']\n})\nexport class EditarComponent {\n  nota: Nota = new Nota();\n\n  \n  constructor(private router: Router, \n      private route: ActivatedRoute,\n      private notasFirebaseService: NotasFirebaseService){\n\n        this.route.params.subscribe(params => {\n          console.log(params)\n          if(params['etiqueta']){\n            this.loadPersona(params['etiqueta'])\n          }\n        })\n\n  }\n\n  loadPersona(uid: string) {\n    this.notasFirebaseService.getNota(uid).subscribe(data => {\n      console.log(data)\n      this.nota = <any> data\n    })\n  }\n\n}\n","\n    <div class=\"form-group\">\n        <label for=\"nota\">Nota:</label>\n        <label>{{nota.nota}}</label>\n        <input type=\"text\" id=\"nota\" formControlName=\"nota\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"fecha\">Fecha:</label>\n        <label>{{nota.fecha}}</label>\n        <input type=\"date\" id=\"fecha\" formControlName=\"fecha\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"etiqueta\">Etiqueta:</label>\n        <label>{{nota.etiqueta}}</label>\n        <textarea id=\"etiqueta\" formControlName=\"etiqueta\" required></textarea>\n      </div>\n    \n\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,gBAAgB;;;;;AASrC,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,MAAc,EACtBC,KAAqB,EACrBC,oBAA0C;IAFlC,KAAAF,MAAM,GAANA,MAAM;IACd,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,oBAAoB,GAApBA,oBAAoB;IALhC,KAAAC,IAAI,GAAS,IAAIN,IAAI,EAAE;IAOjB,IAAI,CAACI,KAAK,CAACG,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnCE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MACnB,IAAGA,MAAM,CAAC,UAAU,CAAC,EAAC;QACpB,IAAI,CAACI,WAAW,CAACJ,MAAM,CAAC,UAAU,CAAC,CAAC;;IAExC,CAAC,CAAC;EAER;EAEAI,WAAWA,CAACC,GAAW;IACrB,IAAI,CAACP,oBAAoB,CAACQ,OAAO,CAACD,GAAG,CAAC,CAACJ,SAAS,CAACM,IAAI,IAAG;MACtDL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACjB,IAAI,CAACR,IAAI,GAASQ,IAAI;IACxB,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAtBUd,eAAe,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAE,cAAA,GAAAJ,EAAA,CAAAC,iBAAA,CAAAI,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAftB,eAAe;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCTxBd,EAAA,CAAAgB,cAAA,aAAwB;QACFhB,EAAA,CAAAiB,MAAA,YAAK;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC/BlB,EAAA,CAAAgB,cAAA,YAAO;QAAAhB,EAAA,CAAAiB,MAAA,GAAa;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC5BlB,EAAA,CAAAmB,SAAA,eAA6D;QAC/DnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,aAAwB;QACHhB,EAAA,CAAAiB,MAAA,aAAM;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACjClB,EAAA,CAAAgB,cAAA,YAAO;QAAAhB,EAAA,CAAAiB,MAAA,IAAc;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAC7BlB,EAAA,CAAAmB,SAAA,gBAA+D;QACjEnB,EAAA,CAAAkB,YAAA,EAAM;QAENlB,EAAA,CAAAgB,cAAA,cAAwB;QACAhB,EAAA,CAAAiB,MAAA,iBAAS;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QACvClB,EAAA,CAAAgB,cAAA,aAAO;QAAAhB,EAAA,CAAAiB,MAAA,IAAiB;QAAAjB,EAAA,CAAAkB,YAAA,EAAQ;QAChClB,EAAA,CAAAmB,SAAA,mBAAuE;QACzEnB,EAAA,CAAAkB,YAAA,EAAM;;;QAdGlB,EAAA,CAAAoB,SAAA,GAAa;QAAbpB,EAAA,CAAAqB,iBAAA,CAAAN,GAAA,CAAAzB,IAAA,CAAAA,IAAA,CAAa;QAMbU,EAAA,CAAAoB,SAAA,GAAc;QAAdpB,EAAA,CAAAqB,iBAAA,CAAAN,GAAA,CAAAzB,IAAA,CAAAgC,KAAA,CAAc;QAMdtB,EAAA,CAAAoB,SAAA,GAAiB;QAAjBpB,EAAA,CAAAqB,iBAAA,CAAAN,GAAA,CAAAzB,IAAA,CAAAiC,QAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}