{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Factura } from '../domain/factura';\nexport let FacturasComponent = class FacturasComponent {\n  constructor(facturasServices, detallesService) {\n    this.facturasServices = facturasServices;\n    this.detallesService = detallesService;\n    this.facturaSeleccionada = null;\n    this.factura = new Factura();\n    this.detallesSeleccionados = [];\n  }\n  ngOnInit() {\n    this.facturas = this.facturasServices.getFacturas();\n    this.cargarDetalles();\n  }\n  cargarDetalles() {\n    this.facturasServices.getAllDetalles().subscribe(data => {\n      this.detalles = data;\n    }, error => {\n      console.error('Error al obtener detalles', error);\n    });\n  }\n  toggleDetalle(detalle) {\n    const index = this.detallesSeleccionados.indexOf(detalle);\n    if (index > -1) {\n      this.detallesSeleccionados.splice(index, 1); // Quitar detalle\n    } else {\n      this.detallesSeleccionados.push(detalle); // A침adir detalle\n    }\n  }\n\n  guardar() {\n    this.facturasServices.saveFacturas(this.factura, this.detallesSeleccionados).subscribe(data => {\n      console.log(data);\n      if (data) {\n        // Si data existe y es un objeto, ahora puedes comprobar si data.codigo es 1\n        if (data.codigo == 1) {\n          this.ngOnInit(); // Aunque llamar a ngOnInit() directamente no es una buena pr치ctica\n        } else {\n          alert(\"Error al insertar \" + data.mensaje);\n        }\n      } else {\n        alert(\"Error al insertar: La respuesta es nula.\");\n      }\n    });\n  }\n  mostrarDetalles(factura) {\n    this.facturaSeleccionada = factura;\n  }\n};\nFacturasComponent = __decorate([Component({\n  selector: 'app-facturas',\n  templateUrl: './facturas.component.html',\n  styleUrls: ['./facturas.component.css']\n})], FacturasComponent);","map":{"version":3,"names":["Component","Factura","FacturasComponent","constructor","facturasServices","detallesService","facturaSeleccionada","factura","detallesSeleccionados","ngOnInit","facturas","getFacturas","cargarDetalles","getAllDetalles","subscribe","data","detalles","error","console","toggleDetalle","detalle","index","indexOf","splice","push","guardar","saveFacturas","log","codigo","alert","mensaje","mostrarDetalles","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\facturas\\facturas.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FacturaService } from 'src/app/services/factura.service';\nimport { Factura } from '../domain/factura';\nimport { Cliente } from '../domain/cliente';\nimport { DetalleService } from 'src/app/services/detalle.service';\nimport { Detalle } from '../domain/detalle';\n\n@Component({\n  selector: 'app-facturas',\n  templateUrl: './facturas.component.html',\n  styleUrls: ['./facturas.component.css']\n})\nexport class FacturasComponent implements OnInit{\n  facturas: any\n  detalles: any\n  facturaSeleccionada: Factura | null = null;\n\n  factura: Factura = new Factura()\n\n  detallesSeleccionados: Detalle[] = [];\n\n  constructor(private facturasServices: FacturaService, private detallesService: DetalleService){\n\n  }\n\n  ngOnInit(): void {\n    this.facturas = this.facturasServices.getFacturas()\n    this.cargarDetalles();\n  }\n\n  cargarDetalles() {\n    this.facturasServices.getAllDetalles().subscribe(\n      (data: Detalle[]) => {\n        this.detalles = data;\n      },\n      (error) => {\n        console.error('Error al obtener detalles', error);\n      }\n    );\n  }\n\n  toggleDetalle(detalle: Detalle) {\n    const index = this.detallesSeleccionados.indexOf(detalle);\n    if (index > -1) {\n      this.detallesSeleccionados.splice(index, 1); // Quitar detalle\n    } else {\n      this.detallesSeleccionados.push(detalle); // A침adir detalle\n    }\n  }\n\n  guardar(){\n    this.facturasServices.saveFacturas(this.factura, this.detallesSeleccionados).subscribe(data => {\n      console.log(data)\n      if (data) {\n        // Si data existe y es un objeto, ahora puedes comprobar si data.codigo es 1\n        if(data.codigo == 1) {\n          this.ngOnInit(); // Aunque llamar a ngOnInit() directamente no es una buena pr치ctica\n        } else {\n          alert(\"Error al insertar \" + data.mensaje);\n        }\n      } else {\n        alert(\"Error al insertar: La respuesta es nula.\");\n      }\n    })\n  }\n\n  mostrarDetalles(factura: Factura) {\n    this.facturaSeleccionada = factura;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAEjD,SAASC,OAAO,QAAQ,mBAAmB;AAUpC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAS5BC,YAAoBC,gBAAgC,EAAUC,eAA+B;IAAzE,KAAAD,gBAAgB,GAAhBA,gBAAgB;IAA0B,KAAAC,eAAe,GAAfA,eAAe;IAN7E,KAAAC,mBAAmB,GAAmB,IAAI;IAE1C,KAAAC,OAAO,GAAY,IAAIN,OAAO,EAAE;IAEhC,KAAAO,qBAAqB,GAAc,EAAE;EAIrC;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACN,gBAAgB,CAACO,WAAW,EAAE;IACnD,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,CAACR,gBAAgB,CAACS,cAAc,EAAE,CAACC,SAAS,CAC7CC,IAAe,IAAI;MAClB,IAAI,CAACC,QAAQ,GAAGD,IAAI;IACtB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CACF;EACH;EAEAE,aAAaA,CAACC,OAAgB;IAC5B,MAAMC,KAAK,GAAG,IAAI,CAACb,qBAAqB,CAACc,OAAO,CAACF,OAAO,CAAC;IACzD,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,CAACb,qBAAqB,CAACe,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;KAC9C,MAAM;MACL,IAAI,CAACb,qBAAqB,CAACgB,IAAI,CAACJ,OAAO,CAAC,CAAC,CAAC;;EAE9C;;EAEAK,OAAOA,CAAA;IACL,IAAI,CAACrB,gBAAgB,CAACsB,YAAY,CAAC,IAAI,CAACnB,OAAO,EAAE,IAAI,CAACC,qBAAqB,CAAC,CAACM,SAAS,CAACC,IAAI,IAAG;MAC5FG,OAAO,CAACS,GAAG,CAACZ,IAAI,CAAC;MACjB,IAAIA,IAAI,EAAE;QACR;QACA,IAAGA,IAAI,CAACa,MAAM,IAAI,CAAC,EAAE;UACnB,IAAI,CAACnB,QAAQ,EAAE,CAAC,CAAC;SAClB,MAAM;UACLoB,KAAK,CAAC,oBAAoB,GAAGd,IAAI,CAACe,OAAO,CAAC;;OAE7C,MAAM;QACLD,KAAK,CAAC,0CAA0C,CAAC;;IAErD,CAAC,CAAC;EACJ;EAEAE,eAAeA,CAACxB,OAAgB;IAC9B,IAAI,CAACD,mBAAmB,GAAGC,OAAO;EACpC;CACD;AAzDYL,iBAAiB,GAAA8B,UAAA,EAL7BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWjC,iBAAiB,CAyD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}