{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/notas-firebase.service\";\nexport class EditarComponent {\n  constructor(fb, router, route, notasFirebaseService) {\n    this.fb = fb;\n    this.router = router;\n    this.route = route;\n    this.notasFirebaseService = notasFirebaseService;\n    this.route.params.subscribe(params => {\n      console.log(params);\n      if (params['etiqueta']) {\n        this.loadPersona(params['etiqueta']);\n      }\n    });\n    this.formulario = this.fb.group({\n      nota: ['', Validators.required],\n      fecha: ['', Validators.required],\n      etiqueta: ['', Validators.required]\n    });\n  }\n  loadPersona(uid) {\n    this.notasFirebaseService.getNota(uid).subscribe(data => {\n      console.log(data);\n      this.nota = data;\n    });\n  }\n  ngOnInit() {\n    this.notasFirebaseService.ngOnInit;\n    this.formulario.patchValue({\n      nota: this.nota.nota,\n      fecha: this.nota.fecha,\n      etiqueta: this.nota.etiqueta\n    });\n  }\n  static #_ = this.ɵfac = function EditarComponent_Factory(t) {\n    return new (t || EditarComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.NotasFirebaseService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditarComponent,\n    selectors: [[\"app-editar\"]],\n    decls: 21,\n    vars: 4,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nota\"], [\"type\", \"text\", \"id\", \"nota\", \"formControlName\", \"nota\", \"required\", \"\"], [\"for\", \"fecha\"], [\"type\", \"date\", \"id\", \"fecha\", \"formControlName\", \"fecha\", \"required\", \"\"], [\"for\", \"etiqueta\"], [\"id\", \"etiqueta\", \"formControlName\", \"etiqueta\", \"required\", \"\"], [3, \"click\"]],\n    template: function EditarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function EditarComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Nota:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1)(8, \"label\", 4);\n        i0.ɵɵtext(9, \"Fecha:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 6);\n        i0.ɵɵtext(15, \"Etiqueta:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"label\");\n        i0.ɵɵtext(17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"textarea\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function EditarComponent_Template_button_click_19_listener() {\n          return ctx.guardarEdicion();\n        });\n        i0.ɵɵtext(20, \"Guardar Edici\\u00F3n\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.nota.nota);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.nota.fecha);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.nota.etiqueta);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nguardarEdicion();\n{\n  // Obtén los nuevos valores desde el formulario\n  const nuevaNota = this.formulario.get('nota').value;\n  const nuevaFecha = this.formulario.get('fecha').value;\n  const nuevaEtiqueta = this.formulario.get('etiqueta').value;\n  // Actualiza el documento en Firestore\n  this.afs.collection('tuColeccion').doc('idDelDocumento').update({\n    nota: nuevaNota,\n    fecha: nuevaFecha,\n    etiqueta: nuevaEtiqueta\n  }).then(() => {\n    console.log('Documento actualizado correctamente.');\n  }).catch(error => {\n    console.error('Error al actualizar el documento:', error);\n  });\n}","map":{"version":3,"names":["Validators","EditarComponent","constructor","fb","router","route","notasFirebaseService","params","subscribe","console","log","loadPersona","formulario","group","nota","required","fecha","etiqueta","uid","getNota","data","ngOnInit","patchValue","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","ActivatedRoute","i3","NotasFirebaseService","_2","selectors","decls","vars","consts","template","EditarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EditarComponent_Template_form_ngSubmit_0_listener","onSubmit","ɵɵtext","ɵɵelementEnd","ɵɵelement","EditarComponent_Template_button_click_19_listener","guardarEdicion","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","nuevaNota","get","value","nuevaFecha","nuevaEtiqueta","afs","collection","doc","update","then","catch","error"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\editar\\editar.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\editar\\editar.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Nota } from '../domain/nota';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NotasFirebaseService } from '../services/notas-firebase.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-editar',\n  templateUrl: './editar.component.html',\n  styleUrls: ['./editar.component.css']\n})\nexport class EditarComponent implements OnInit {\n  nota: any;\n  formulario: FormGroup;\n  \n\n  constructor(private fb: FormBuilder,  private router: Router, \n      private route: ActivatedRoute,\n      private notasFirebaseService: NotasFirebaseService){\n        \n        this.route.params.subscribe(params => {\n          console.log(params)\n          if(params['etiqueta']){\n            this.loadPersona(params['etiqueta'])\n          }\n        })\n        this.formulario = this.fb.group({\n          nota: ['', Validators.required],\n          fecha: ['', Validators.required],\n          etiqueta: ['', Validators.required]\n        });\n  }\n\n  loadPersona(uid: string) {\n    this.notasFirebaseService.getNota(uid).subscribe(data => {\n      console.log(data)\n      this.nota = <any> data\n    })\n  }\n\n  ngOnInit() {\n    this.notasFirebaseService.ngOnInit\n      this.formulario.patchValue({\n        nota: this.nota.nota,\n        fecha: this.nota.fecha,\n        etiqueta: this.nota.etiqueta\n      });\n    });\n  }\n\n  guardarEdicion() {\n    // Obtén los nuevos valores desde el formulario\n    const nuevaNota = this.formulario.get('nota').value;\n    const nuevaFecha = this.formulario.get('fecha').value;\n    const nuevaEtiqueta = this.formulario.get('etiqueta').value;\n\n    // Actualiza el documento en Firestore\n    this.afs.collection('tuColeccion').doc('idDelDocumento').update({\n      nota: nuevaNota,\n      fecha: nuevaFecha,\n      etiqueta: nuevaEtiqueta\n    }).then(() => {\n      console.log('Documento actualizado correctamente.');\n    }).catch(error => {\n      console.error('Error al actualizar el documento:', error);\n    });\n  }\n\n}\n","<form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"nota\">Nota:</label>\n        <label>{{nota.nota}}</label>\n        <input type=\"text\" id=\"nota\" formControlName=\"nota\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"fecha\">Fecha:</label>\n        <label>{{nota.fecha}}</label>\n        <input type=\"date\" id=\"fecha\" formControlName=\"fecha\" required>\n      </div>\n    \n      <div class=\"form-group\">\n        <label for=\"etiqueta\">Etiqueta:</label>\n        <label>{{nota.etiqueta}}</label>\n        <textarea id=\"etiqueta\" formControlName=\"etiqueta\" required></textarea>\n      </div>\n    \n      <button (click)=\"guardarEdicion()\">Guardar Edición</button>\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}