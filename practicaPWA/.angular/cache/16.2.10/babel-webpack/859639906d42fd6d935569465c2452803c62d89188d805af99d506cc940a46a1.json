{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/notas.service\";\nimport * as i3 from \"../services/notas-firebase.service\";\nexport class CrearComponent {\n  constructor(fb, notasService, notasFirebaseService) {\n    this.fb = fb;\n    this.notasService = notasService;\n    this.notasFirebaseService = notasFirebaseService;\n    this.formulario = this.fb.group({\n      nota: ['', Validators.required],\n      fecha: ['', Validators.required],\n      etiqueta: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.formulario.valid) {\n      const nota = this.formulario.value;\n      this.notasService.agregarReceta(nota);\n      this.notasFirebaseService.save(nota);\n      this.formulario.reset();\n    }\n  }\n  static #_ = this.ɵfac = function CrearComponent_Factory(t) {\n    return new (t || CrearComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.NotasService), i0.ɵɵdirectiveInject(i3.NotasFirebaseService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CrearComponent,\n    selectors: [[\"app-crear\"]],\n    decls: 15,\n    vars: 2,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"nota\"], [\"type\", \"text\", \"id\", \"nota\", \"formControlName\", \"nota\", \"required\", \"\"], [\"for\", \"fecha\"], [\"id\", \"fecha\", \"formControlName\", \"fecha\", \"required\", \"\"], [\"for\", \"etiqueta\"], [\"id\", \"etiqueta\", \"formControlName\", \"etiqueta\", \"required\", \"\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function CrearComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CrearComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n        i0.ɵɵtext(3, \"Nombre de la Receta:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Ingredientes:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"textarea\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n        i0.ɵɵtext(11, \"Pasos:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"textarea\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵtext(14, \"Agregar Receta\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"disabled\", ctx.formulario.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Validators","CrearComponent","constructor","fb","notasService","notasFirebaseService","formulario","group","nota","required","fecha","etiqueta","onSubmit","valid","value","agregarReceta","save","reset","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","NotasService","i3","NotasFirebaseService","_2","selectors","decls","vars","consts","template","CrearComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CrearComponent_Template_form_ngSubmit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","invalid"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\crear\\crear.component.ts","C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\crear\\crear.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Nota } from '../domain/nota';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { NotasService } from '../services/notas.service';\nimport { NotasFirebaseService } from '../services/notas-firebase.service';\n\n@Component({\n  selector: 'app-crear',\n  templateUrl: './crear.component.html',\n  styleUrls: ['./crear.component.css']\n})\nexport class CrearComponent {\n  formulario: FormGroup;\n\n  constructor(,private fb: FormBuilder, private notasService: NotasService, private notasFirebaseService: NotasFirebaseService) {\n    this.formulario = this.fb.group({\n      nota: ['', Validators.required],\n      fecha: ['', Validators.required],\n      etiqueta: ['', Validators.required],\n    });\n  }\n\n  onSubmit() {\n    if (this.formulario.valid) {\n      const nota = this.formulario.value as Nota;\n      this.notasService.agregarReceta(nota);\n      this.notasFirebaseService.save(nota);\n      this.formulario.reset();\n      }\n    }\n}\n","\n<form [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"nota\">Nombre de la Receta:</label>\n      <input type=\"text\" id=\"nota\" formControlName=\"nota\" required>\n    </div>\n  \n    <div class=\"form-group\">\n      <label for=\"fecha\">Ingredientes:</label>\n      <textarea id=\"fecha\" formControlName=\"fecha\" required></textarea>\n    </div>\n  \n    <div class=\"form-group\">\n      <label for=\"etiqueta\">Pasos:</label>\n      <textarea id=\"etiqueta\" formControlName=\"etiqueta\" required></textarea>\n    </div>\n  \n    <button type=\"submit\" [disabled]=\"formulario.invalid\">Agregar Receta</button>\n  </form>\n  \n\n"],"mappings":"AAEA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,cAAc;EAGzBC,YAAqBC,EAAe,EAAUC,YAA0B,EAAUC,oBAA0C;IAAvG,KAAAF,EAAE,GAAFA,EAAE;IAAuB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,oBAAoB,GAApBA,oBAAoB;IACpG,IAAI,CAACC,UAAU,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC9BC,IAAI,EAAE,CAAC,EAAE,EAAER,UAAU,CAACS,QAAQ,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACS,QAAQ,CAAC;MAChCE,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACS,QAAQ;KACnC,CAAC;EACJ;EAEAG,QAAQA,CAAA;IACN,IAAI,IAAI,CAACN,UAAU,CAACO,KAAK,EAAE;MACzB,MAAML,IAAI,GAAG,IAAI,CAACF,UAAU,CAACQ,KAAa;MAC1C,IAAI,CAACV,YAAY,CAACW,aAAa,CAACP,IAAI,CAAC;MACrC,IAAI,CAACH,oBAAoB,CAACW,IAAI,CAACR,IAAI,CAAC;MACpC,IAAI,CAACF,UAAU,CAACW,KAAK,EAAE;;EAEzB;EAAC,QAAAC,CAAA,G;qBAlBQjB,cAAc,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAd1B,cAAc;IAAA2B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bf,EAAA,CAAAiB,cAAA,cAAuD;QAAxBjB,EAAA,CAAAkB,UAAA,sBAAAC,iDAAA;UAAA,OAAYH,GAAA,CAAAvB,QAAA,EAAU;QAAA,EAAC;QAClDO,EAAA,CAAAiB,cAAA,aAAwB;QACJjB,EAAA,CAAAoB,MAAA,2BAAoB;QAAApB,EAAA,CAAAqB,YAAA,EAAQ;QAC9CrB,EAAA,CAAAsB,SAAA,eAA6D;QAC/DtB,EAAA,CAAAqB,YAAA,EAAM;QAENrB,EAAA,CAAAiB,cAAA,aAAwB;QACHjB,EAAA,CAAAoB,MAAA,oBAAa;QAAApB,EAAA,CAAAqB,YAAA,EAAQ;QACxCrB,EAAA,CAAAsB,SAAA,kBAAiE;QACnEtB,EAAA,CAAAqB,YAAA,EAAM;QAENrB,EAAA,CAAAiB,cAAA,aAAwB;QACAjB,EAAA,CAAAoB,MAAA,cAAM;QAAApB,EAAA,CAAAqB,YAAA,EAAQ;QACpCrB,EAAA,CAAAsB,SAAA,mBAAuE;QACzEtB,EAAA,CAAAqB,YAAA,EAAM;QAENrB,EAAA,CAAAiB,cAAA,iBAAsD;QAAAjB,EAAA,CAAAoB,MAAA,sBAAc;QAAApB,EAAA,CAAAqB,YAAA,EAAS;;;QAhB3ErB,EAAA,CAAAuB,UAAA,cAAAP,GAAA,CAAA7B,UAAA,CAAwB;QAgBJa,EAAA,CAAAwB,SAAA,IAA+B;QAA/BxB,EAAA,CAAAuB,UAAA,aAAAP,GAAA,CAAA7B,UAAA,CAAAsC,OAAA,CAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}