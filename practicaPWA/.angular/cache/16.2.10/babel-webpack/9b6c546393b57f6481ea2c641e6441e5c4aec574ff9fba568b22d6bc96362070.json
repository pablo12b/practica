{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class NotasFirebaseService {\n  constructor(db) {\n    this.db = db;\n    this.path = 'notas';\n    this.notasRef = db.collection(this.path);\n    this.notasRef.valueChanges().subscribe(data => {\n      console.log(data);\n    });\n  }\n  getAll() {\n    return this.notasRef.valueChanges();\n  }\n  eliminarCampo(id) {\n    this.afs.collection('tuColeccion').doc(id).delete().then(() => {\n      console.log('Campo eliminado correctamente');\n    }).catch(error => {\n      console.error('Error al eliminar campo:', error);\n    });\n  }\n  save(nota) {\n    const uid = nota.etiqueta;\n    console.log('Nota', nota);\n    return this.notasRef.doc(uid).set(Object.assign({}, nota));\n  }\n  getReceta(uid) {\n    console.log(\"uid\", uid);\n    return this.db.doc(this.path + '/' + uid).valueChanges();\n  }\n  static #_ = this.ɵfac = function NotasFirebaseService_Factory(t) {\n    return new (t || NotasFirebaseService)(i0.ɵɵinject(i1.AngularFirestore));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NotasFirebaseService,\n    factory: NotasFirebaseService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["NotasFirebaseService","constructor","db","path","notasRef","collection","valueChanges","subscribe","data","console","log","getAll","eliminarCampo","id","afs","doc","delete","then","catch","error","save","nota","uid","etiqueta","set","Object","assign","getReceta","_","i0","ɵɵinject","i1","AngularFirestore","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\pages\\services\\notas-firebase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/compat/firestore'\nimport { Nota } from '../domain/nota';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotasFirebaseService {\n\n  private path = 'notas'\n\n  notasRef: AngularFirestoreCollection<any>\n\n  constructor(private db: AngularFirestore) { \n    this.notasRef = db.collection(this.path)\n\n    this.notasRef.valueChanges().subscribe(data => {\n      console.log(data)\n    })\n  }\n\n  getAll(){\n    return this.notasRef.valueChanges()\n  }\n\n  eliminarCampo(id: string) {\n    this.afs.collection('tuColeccion').doc(id).delete()\n      .then(() => {\n        console.log('Campo eliminado correctamente');\n      })\n      .catch(error => {\n        console.error('Error al eliminar campo:', error);\n      });\n  }\n\n  save(nota: Nota){\n    const uid = nota.etiqueta\n    console.log('Nota', nota)\n    return this.notasRef.doc(uid).set(Object.assign({}, nota))\n  }\n\n  getReceta(uid:string){\n    console.log(\"uid\", uid)\n    return this.db.doc(this.path+'/'+uid).valueChanges()\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,EAAoB;IAApB,KAAAA,EAAE,GAAFA,EAAE;IAJd,KAAAC,IAAI,GAAG,OAAO;IAKpB,IAAI,CAACC,QAAQ,GAAGF,EAAE,CAACG,UAAU,CAAC,IAAI,CAACF,IAAI,CAAC;IAExC,IAAI,CAACC,QAAQ,CAACE,YAAY,EAAE,CAACC,SAAS,CAACC,IAAI,IAAG;MAC5CC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;EAEAG,MAAMA,CAAA;IACJ,OAAO,IAAI,CAACP,QAAQ,CAACE,YAAY,EAAE;EACrC;EAEAM,aAAaA,CAACC,EAAU;IACtB,IAAI,CAACC,GAAG,CAACT,UAAU,CAAC,aAAa,CAAC,CAACU,GAAG,CAACF,EAAE,CAAC,CAACG,MAAM,EAAE,CAChDC,IAAI,CAAC,MAAK;MACTR,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC,CAAC,CACDQ,KAAK,CAACC,KAAK,IAAG;MACbV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CAAC;EACN;EAEAC,IAAIA,CAACC,IAAU;IACb,MAAMC,GAAG,GAAGD,IAAI,CAACE,QAAQ;IACzBd,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEW,IAAI,CAAC;IACzB,OAAO,IAAI,CAACjB,QAAQ,CAACW,GAAG,CAACO,GAAG,CAAC,CAACE,GAAG,CAACC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAEL,IAAI,CAAC,CAAC;EAC5D;EAEAM,SAASA,CAACL,GAAU;IAClBb,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEY,GAAG,CAAC;IACvB,OAAO,IAAI,CAACpB,EAAE,CAACa,GAAG,CAAC,IAAI,CAACZ,IAAI,GAAC,GAAG,GAACmB,GAAG,CAAC,CAAChB,YAAY,EAAE;EACtD;EAAC,QAAAsB,CAAA,G;qBArCU5B,oBAAoB,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,gBAAA;EAAA;EAAA,QAAAC,EAAA,G;WAApBjC,oBAAoB;IAAAkC,OAAA,EAApBlC,oBAAoB,CAAAmC,IAAA;IAAAC,UAAA,EAFnB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}