{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { CrearComponent } from './pages/crear/crear.component';\nimport { VisualizarComponent } from './pages/visualizar/visualizar.component';\nimport { environment } from './pages/environments/environment';\nimport { EditarComponent } from './pages/editar/editar.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nexport let AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent, MenuComponent, CrearComponent, VisualizarComponent, EditarComponent],\n  imports: [provideFirebaseApp(() => initializeApp(environment.firebaseConfig)), provideFirestore(() => getFirestore()), BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: !isDevMode(),\n    // Register the ServiceWorker as soon as the application is stable\n    // or after 30 seconds (whichever comes first).\n    registrationStrategy: 'registerWhenStable:30000'\n  })],\n  providers: [{\n    provide: FIREBASE_OPTIONS,\n    useValue: environment.firebaseConfig\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);","map":{"version":3,"names":["NgModule","isDevMode","BrowserModule","FormsModule","ReactiveFormsModule","AppRoutingModule","AppComponent","initializeApp","provideFirebaseApp","getFirestore","provideFirestore","FIREBASE_OPTIONS","MenuComponent","CrearComponent","VisualizarComponent","environment","EditarComponent","ServiceWorkerModule","AppModule","__decorate","declarations","imports","firebaseConfig","register","enabled","registrationStrategy","providers","provide","useValue","bootstrap"],"sources":["C:\\Users\\ROG ZEPHYRUS\\Documents\\GitHub\\practica\\practicaPWA\\src\\app\\app.module.ts"],"sourcesContent":["import { NgModule, isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AngularFireModule } from '@angular/fire/compat';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { FIREBASE_APP_NAME, FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { MenuComponent } from './pages/menu/menu.component';\nimport { CrearComponent } from './pages/crear/crear.component';\nimport { VisualizarComponent } from './pages/visualizar/visualizar.component';\nimport { environment } from './pages/environments/environment';\nimport { EditarComponent } from './pages/editar/editar.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MenuComponent,\n    CrearComponent,\n    VisualizarComponent,\n    EditarComponent\n  ],\n  imports: [\n    provideFirebaseApp(() => initializeApp(environment.firebaseConfig)),\n    provideFirestore(() => getFirestore()),\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: !isDevMode(),\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })\n  ],\n  providers: [{ provide: FIREBASE_OPTIONS, useValue: environment.firebaseConfig}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,eAAe;AACnD,SAASC,aAAa,QAAQ,2BAA2B;AACzD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,mBAAmB,QAAQ,gBAAgB;AAGpD,SAASC,gBAAgB,QAAQ,sBAAsB;AACvD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,aAAa,EAAEC,kBAAkB,QAAQ,mBAAmB;AACrE,SAASC,YAAY,EAAEC,gBAAgB,QAAQ,yBAAyB;AACxE,SAA4BC,gBAAgB,QAAQ,sBAAsB;AAC1E,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,mBAAmB,QAAQ,yCAAyC;AAC7E,SAASC,WAAW,QAAQ,kCAAkC;AAC9D,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,mBAAmB,QAAQ,yBAAyB;AA2BtD,WAAMC,SAAS,GAAf,MAAMA,SAAS,GAAI;AAAbA,SAAS,GAAAC,UAAA,EAzBrBnB,QAAQ,CAAC;EACRoB,YAAY,EAAE,CACZd,YAAY,EACZM,aAAa,EACbC,cAAc,EACdC,mBAAmB,EACnBE,eAAe,CAChB;EACDK,OAAO,EAAE,CACPb,kBAAkB,CAAC,MAAMD,aAAa,CAACQ,WAAW,CAACO,cAAc,CAAC,CAAC,EACnEZ,gBAAgB,CAAC,MAAMD,YAAY,EAAE,CAAC,EACtCP,aAAa,EACbG,gBAAgB,EAChBF,WAAW,EACXC,mBAAmB,EACnBa,mBAAmB,CAACM,QAAQ,CAAC,gBAAgB,EAAE;IAC7CC,OAAO,EAAE,CAACvB,SAAS,EAAE;IACrB;IACA;IACAwB,oBAAoB,EAAE;GACvB,CAAC,CACH;EACDC,SAAS,EAAE,CAAC;IAAEC,OAAO,EAAEhB,gBAAgB;IAAEiB,QAAQ,EAAEb,WAAW,CAACO;EAAc,CAAC,CAAC;EAC/EO,SAAS,EAAE,CAACvB,YAAY;CACzB,CAAC,C,EACWY,SAAS,CAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}