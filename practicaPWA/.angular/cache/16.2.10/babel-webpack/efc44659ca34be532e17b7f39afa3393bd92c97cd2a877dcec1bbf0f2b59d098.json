{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let NotasService = /*#__PURE__*/(() => {\n  class NotasService {\n    constructor() {\n      this.notas = [];\n    }\n    agregarReceta(nota) {\n      const notas = this.obtenerNotas();\n      // Agregar una verificación para asegurarse de que event y event.target no sean nulos\n      notas.push(nota);\n      localStorage.setItem('notas', JSON.stringify(notas));\n    }\n    obtenerNotas() {\n      const notas = localStorage.getItem('notas');\n      return notas ? JSON.parse(notas) : [];\n    }\n    borrarNota(nombreNota) {\n      // Obtener las notas actuales desde localStorage\n      const notasString = localStorage.getItem('notas');\n      // Verificar si hay notas en localStorage\n      if (notasString) {\n        // Parsear las notas a un objeto\n        const notas = JSON.parse(notasString);\n        // Verificar si la nota que deseas borrar existe\n        if (notas.hasOwnProperty(nombreNota)) {\n          // Borrar la nota específica\n          delete notas[nombreNota];\n          // Convertir el objeto de notas a una cadena y almacenarlo nuevamente\n          localStorage.setItem('notas', JSON.stringify(notas));\n          console.log(`La nota '${nombreNota}' ha sido borrada correctamente.`);\n        } else {\n          console.log(`No se encontró la nota '${nombreNota}'.`);\n        }\n      } else {\n        console.log('No hay notas almacenadas en localStorage.');\n      }\n    }\n    static #_ = this.ɵfac = function NotasService_Factory(t) {\n      return new (t || NotasService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: NotasService,\n      factory: NotasService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return NotasService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}