{"ast":null,"code":"import { isDevMode } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { initializeApp, provideFirebaseApp } from '@angular/fire/app';\nimport { getFirestore, provideFirestore } from '@angular/fire/firestore';\nimport { FIREBASE_OPTIONS } from '@angular/fire/compat';\nimport { environment } from './pages/environments/environment';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/app\";\nimport * as i2 from \"@angular/fire/firestore\";\nimport * as i3 from \"@angular/service-worker\";\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [{\n        provide: FIREBASE_OPTIONS,\n        useValue: environment.firebaseConfig\n      }],\n      imports: [provideFirebaseApp(() => initializeApp(environment.firebaseConfig)), provideFirestore(() => getFirestore()), BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, ServiceWorkerModule.register('ngsw-worker.js', {\n        enabled: !isDevMode(),\n        // Register the ServiceWorker as soon as the application is stable\n        // or after 30 seconds (whichever comes first).\n        registrationStrategy: 'registerWhenStable:30000'\n      })]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}